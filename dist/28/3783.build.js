(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[3783],{7735:function(t,e,n){(t.exports=n(9252)(!1)).push([t.id,"\n.center-margin{margin-left:auto;margin-right:auto\n}\n.drop-down-box-background{background-color:#e3e3e3;border:1px solid #b0b0b0;border-bottom-left-radius:6px;border-bottom-right-radius:6px\n}\n.inner{margin-left:auto;margin-right:auto;max-width:600px\n}\n.patterns{font-family:Arial, Helvetica, sans-serif;border-collapse:collapse;width:100%\n}\n.patterns td,.patterns th{border:1px solid #ddd;padding:8px\n}\n.patterns td{font-size:12px\n}\n.patterns tr:nth-child(even){background-color:#f2f2f2\n}\n.patterns tr:hover{background-color:#ddd\n}\n.patterns th{padding-top:12px;padding-bottom:12px;text-align:left;background-color:#6e6e6e;color:var(--main-full-text-color-invert)\n}\n",""])},3783:function(t,e,n){"use strict";n.r(e),n.d(e,{default:function(){return p}});var r=n(7026),a=n(4736),o=n(7688),i={components:{DropDownBox:r.Z,TryItNow:o.Z,ModalA:a.Z}},s=function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("div",{staticClass:"inner"},[n("h1",[t._v("SQL Lag() Window Function")]),t._v(" "),n("p",[t._v("\n      The Lag() function returns the record offsetted by the specified amount.\n    ")]),t._v(" "),n("h2",[t._v("Syntax")]),t._v(" "),n("try-it-now",{attrs:{code:"Lag(expression [, offset])",tryNowButton:!1}}),t._v(" "),n("h2",[t._v("Parameter Values")]),t._v(" "),t._m(0),t._v(" "),n("h2",[t._v("Lag() Example")]),t._v(" "),n("p",[t._v("\n      The following SQL statement displays every patients first_name and the patient's first_name before them.\n    ")]),t._v(" "),n("try-it-now",{attrs:{code:"select\n  patient_id,\n  first_name,\n  lag(first_name, 1) over() as previous_name\nfrom patients",tryNowButton:!0}}),t._v(" "),n("br"),n("br"),n("br")],1)};s._withStripped=!0;var l=n(2236);var d=function(t){n(343)},c=(0,l.Z)(i,s,[function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("table",{staticClass:"patterns"},[n("thead",[n("tr",[n("th",[t._v("Parameter")]),t._v(" "),n("th",[t._v("Description")])])]),t._v(" "),n("tbody",[n("tr",[n("td",[t._v("expression")]),t._v(" "),n("td",[t._v("\n            Required. The value to be returned based on the specified offset. It\n            is an expression of any type that returns a single (scalar) value.\n            expression cannot be an analytic function.\n          ")])]),t._v(" "),n("tr",[n("td",[t._v("offset")]),t._v(" "),n("td",[t._v("\n            Optional. The number of rows back from the current row from which to\n            obtain a value. If not specified, the default is 1. offset can be a\n            column, subquery, or other expression that evaluates to a positive\n            integer. offset cannot be a\n            negative value or an analytic function.\n          ")])])])])}],!1,d,null,null);c.options.__file="src\\learning-resource-pages\\Lag.vue";var p=c.exports},343:function(t,e,n){var r=n(7735);r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[t.id,r,""]]),r.locals&&(t.exports=r.locals);(0,n(5346).Z)("0149258c",r,!1,{})}}]);