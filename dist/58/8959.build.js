(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[8959],{8959:function(e,n,t){"use strict";t.r(n);var s=t(9654);n.default={question:'Show the employee\'s first_name and last_name, a "num_orders" column with a count of the orders taken, and a column called "Shipped" that displays "On Time" if the order shipped_date is less or equal to the required_date, "Late" if the order shipped late, "Not Shipped" if shipped_date is null. \n  <br> <br>\n  Order by employee last_name, then by first_name, and then descending by number of orders.',solution:"SELECT\n  e.first_name,\n  e.last_name,\n  COUNT(o.order_id) As num_orders,\n  (\n    CASE\n      WHEN o.shipped_date <= o.required_date THEN 'On Time'\n      WHEN o.shipped_date > o.required_date THEN 'Late'\n      WHEN o.shipped_date is null THEN 'Not Shipped'\n    END\n  ) AS shipped\nFROM orders o\n  JOIN employees e ON e.employee_id = o.employee_id\nGROUP BY\n  e.first_name,\n  e.last_name,\n  shipped\nORDER BY\n  e.last_name,\n  e.first_name,\n  num_orders DESC",alternativeSolutions:[],expectedOutput:null,usedTables:["orders","employees"],hints:{keywordsUsed:["SELECT","COUNT","CASE","JOIN","GROUP BY","ORDER BY","DESC"],hintLines:[4,5,6,7,8,9]},expectedDBState:null,validator:function(e,n){return s.Z.hashColumns((null==n?void 0:n.values)||[],!0,!1)==s.Z.hashColumns(this.expectedOutput[0].values,!0,!1)},initalize:function(e){this.expectedOutput=e.exec(this.solution),this.expectedDBState=e}}}}]);