(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[4738],{4738:function(t,e,n){"use strict";n.r(e);var i=n(9654);e.default={question:"Show patient_id, first_name, last_name from patients whose does not have any records in the admissions table. (Their patient_id does not exist in any admissions.patient_id rows.)",solution:"SELECT\n  patients.patient_id,\n  first_name,\n  last_name\nfrom patients\nwhere patients.patient_id not in (\n    select admissions.patient_id\n    from admissions\n  )",alternativeSolutions:["SELECT\n  patients.patient_id,\n  first_name,\n  last_name\nfrom patients\n  left join admissions on patients.patient_id = admissions.patient_id\nwhere admissions.patient_id is NULL"],expectedOutput:null,expectedDBState:null,usedTables:["patients","admissions"],hints:{keywordsUsed:["SELECT","WHERE","NOT","IN"],hintLines:[5]},validator:function(t,e){return i.Z.hashColumns((null==e?void 0:e.values)||[],!1,!1)==i.Z.hashColumns(this.expectedOutput[0].values,!1,!1)},initalize:function(t){this.expectedOutput=t.exec(this.solution),this.expectedDBState=t}}}}]);