(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[9507],{7252:function(t,e,a){(t.exports=a(9252)(!1)).push([t.id,".center-margin{margin-left:auto;margin-right:auto}.drop-down-box-background{background-color:#e3e3e3;border:1px solid #b0b0b0;border-bottom-left-radius:6px;border-bottom-right-radius:6px}.inner{margin-left:auto;margin-right:auto;max-width:600px}.patterns{font-family:Arial,Helvetica,sans-serif;border-collapse:collapse;width:100%}.patterns td,.patterns th{border:1px solid #ddd;padding:8px}.patterns td{font-size:12px}.patterns tr:nth-child(2n){background-color:#f2f2f2}.patterns tr:hover{background-color:#ddd}.patterns th{padding-top:12px;padding-bottom:12px;text-align:left;background-color:#6e6e6e;color:var(--main-full-text-color-invert)}",""])},9507:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return _}});var i=a(2880),r=a(4246),v=a(3723),s={components:{DropDownBox:i.Z,TryItNow:v.Z,ModalA:r.Z}};var d=function(t){a(2023)},_=(0,a(2236).Z)(s,(function(){var t=this,e=t.$createElement;t._self._c;return t._m(0)}),[function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"inner"},[a("h1",[t._v("SQL Data Types for MySQL, SQL Server, and MS Access")]),t._v(" "),a("p",[t._v("The data type of a column defines what value the column can hold: integer, character, money, date and time, binary, and so on.")]),t._v(" "),a("h2",[t._v("SQL Data Types")]),t._v(" "),a("p",[t._v("Each column in a database table is required to have a name and a data type.")]),t._v(" "),a("p",[t._v("An SQL developer must decide what type of data that will be stored inside each column when creating a table. The data type is a guideline for SQL to understand what type of data is expected inside of each column, and it also identifies how SQL will interact with the stored data.")]),t._v(" "),a("p",[a("b",[t._v("Note:")]),t._v("Data types might have different names in different database. And even if the name is the same, the size and other details may be different! Always check the documentation!")]),t._v(" "),a("h2",[t._v("MySQL Data Types (Version 8.0)")]),t._v(" "),a("p",[t._v("In MySQL there are three main data types: string, numeric, and date and time.")]),t._v(" "),a("h3",[t._v("String Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("thead",[a("tr",[a("th",[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("CHAR(size)")]),t._v(" "),a("td",[t._v("A FIXED length string (can contain letters, numbers, and special characters). The size parameter specifies the column length in characters - can be from 0 to 255. Default is 1")])]),t._v(" "),a("tr",[a("td",[t._v("VARCHAR(size)")]),t._v(" "),a("td",[t._v("A VARIABLE length string (can contain letters, numbers, and special characters). The size parameter specifies the maximum column length in characters - can be from 0 to 65535")])]),t._v(" "),a("tr",[a("td",[t._v("BINARY(size)")]),t._v(" "),a("td",[t._v("Equal to CHAR(), but stores binary byte strings. The size parameter specifies the column length in bytes. Default is 1")])]),t._v(" "),a("tr",[a("td",[t._v("VARBINARY(size)")]),t._v(" "),a("td",[t._v("Equal to VARCHAR(), but stores binary byte strings. The size parameter specifies the maximum column length in bytes.")])]),t._v(" "),a("tr",[a("td",[t._v("TINYBLOB")]),t._v(" "),a("td",[t._v("For BLOBs (Binary Large OBjects). Max length: 255 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("TINYTEXT")]),t._v(" "),a("td",[t._v("Holds a string with a maximum length of 255 characters")])]),t._v(" "),a("tr",[a("td",[t._v("TEXT(size)")]),t._v(" "),a("td",[t._v("Holds a string with a maximum length of 65,535 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("BLOB(size)")]),t._v(" "),a("td",[t._v("For BLOBs (Binary Large OBjects). Holds up to 65,535 bytes of data")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMTEXT")]),t._v(" "),a("td",[t._v("Holds a string with a maximum length of 16,777,215 characters")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMBLOB")]),t._v(" "),a("td",[t._v("For BLOBs (Binary Large OBjects). Holds up to 16,777,215 bytes of data")])]),t._v(" "),a("tr",[a("td",[t._v("LONGTEXT")]),t._v(" "),a("td",[t._v("Holds a string with a maximum length of 4,294,967,295 characters")])]),t._v(" "),a("tr",[a("td",[t._v("LONGBLOB")]),t._v(" "),a("td",[t._v("For BLOBs (Binary Large OBjects). Holds up to 4,294,967,295 bytes of data")])]),t._v(" "),a("tr",[a("td",[t._v("ENUM(val1, val2, val3, ...)")]),t._v(" "),a("td",[t._v("A string object that can have only one value, chosen from a list of possible values. You can list up to 65535 values in an ENUM list. If a value is inserted that is not in the list, a blank value will be inserted. The values are sorted in the order you enter them")])]),t._v(" "),a("tr",[a("td",[t._v("SET(val1, val2, val3, ...)")]),t._v(" "),a("td",[t._v("A string object that can have 0 or more values, chosen from a list of possible values. You can list up to 64 values in a SET list")])])])]),t._v(" "),a("h3",[t._v("Numeric Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("thead",[a("tr",[a("th",[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("BIT(size)")]),t._v(" "),a("td",[t._v("A bit-value type. The number of bits per value is specified in size. The size parameter can hold a value from 1 to 64. The default value for size is 1.")])]),t._v(" "),a("tr",[a("td",[t._v("TINYINT(size)")]),t._v(" "),a("td",[t._v("A very small integer. Signed range is from -128 to 127. Unsigned range is from 0 to 255. The size parameter specifies the maximum display width (which is 255)")])]),t._v(" "),a("tr",[a("td",[t._v("BOOL")]),t._v(" "),a("td",[t._v("Zero is considered as false, nonzero values are considered as true.")])]),t._v(" "),a("tr",[a("td",[t._v("BOOLEAN")]),t._v(" "),a("td",[t._v("Equal to BOOL")])]),t._v(" "),a("tr",[a("td",[t._v("SMALLINT(size)")]),t._v(" "),a("td",[t._v("A small integer. Signed range is from -32768 to 32767. Unsigned range is from 0 to 65535. The size parameter specifies the maximum display width (which is 255)")])]),t._v(" "),a("tr",[a("td",[t._v("MEDIUMINT(size)")]),t._v(" "),a("td",[t._v("A medium integer. Signed range is from -8388608 to 8388607. Unsigned range is from 0 to 16777215. The size parameter specifies the maximum display width (which is 255)")])]),t._v(" "),a("tr",[a("td",[t._v("INT(size)")]),t._v(" "),a("td",[t._v("A medium integer. Signed range is from -2147483648 to 2147483647. Unsigned range is from 0 to 4294967295. The size parameter specifies the maximum display width (which is 255)")])]),t._v(" "),a("tr",[a("td",[t._v("INTEGER(size)")]),t._v(" "),a("td",[t._v("Equal to INT(size)")])]),t._v(" "),a("tr",[a("td",[t._v("BIGINT(size)")]),t._v(" "),a("td",[t._v("A large integer. Signed range is from -9223372036854775808 to 9223372036854775807. Unsigned range is from 0 to 18446744073709551615. The size parameter specifies the maximum display width (which is 255)")])]),t._v(" "),a("tr",[a("td",[t._v("FLOAT(size, d)")]),t._v(" "),a("td",[t._v("A floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. This syntax is deprecated in MySQL 8.0.17, and it will be removed in future MySQL versions")])]),t._v(" "),a("tr",[a("td",[t._v("FLOAT(p)")]),t._v(" "),a("td",[t._v("A floating point number. MySQL uses the p value to determine whether to use FLOAT or DOUBLE for the resulting data type. If p is from 0 to 24, the data type becomes FLOAT(). If p is from 25 to 53, the data type becomes DOUBLE()")])]),t._v(" "),a("tr",[a("td",[t._v("DOUBLE(size, d)")]),t._v(" "),a("td",[t._v("A normal-size floating point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter")])]),t._v(" "),a("tr",[a("td",[t._v("DOUBLE PRECISION(size, d)")]),t._v(" "),a("td")]),t._v(" "),a("tr",[a("td",[t._v("DECIMAL(size, d)")]),t._v(" "),a("td",[t._v("An exact fixed-point number. The total number of digits is specified in size. The number of digits after the decimal point is specified in the d parameter. The maximum number for size is 65. The maximum number for d is 30. The default value for size is 10. The default value for d is 0.")])]),t._v(" "),a("tr",[a("td",[t._v("DEC(size, d)")]),t._v(" "),a("td",[t._v("Equal to DECIMAL(size,d)")])])])]),t._v(" "),a("h3",[t._v("Date and Time Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("thead",[a("tr",[a("th",[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("DATE")]),t._v(" "),a("td",[t._v("A date. Format: YYYY-MM-DD. The supported range is from '1000-01-01' to '9999-12-31'")])]),t._v(" "),a("tr",[a("td",[t._v("DATETIME(fsp)")]),t._v(" "),a("td",[t._v("A date and time combination. Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1000-01-01 00:00:00' to '9999-12-31 23:59:59'. Adding DEFAULT and ON UPDATE in the column definition to get automatic initialization and updating to the current date and time")])]),t._v(" "),a("tr",[a("td",[t._v("TIMESTAMP(fsp)")]),t._v(" "),a("td",[t._v("A timestamp. TIMESTAMP values are stored as the number of seconds since the Unix epoch ('1970-01-01 00:00:00' UTC). Format: YYYY-MM-DD hh:mm:ss. The supported range is from '1970-01-01 00:00:01' UTC to '2038-01-09 03:14:07' UTC. Automatic initialization and updating to the current date and time can be specified using DEFAULT CURRENT_TIMESTAMP and ON UPDATE CURRENT_TIMESTAMP in the column definition")])]),t._v(" "),a("tr",[a("td",[t._v("TIME(fsp)")]),t._v(" "),a("td",[t._v("A time. Format: hh:mm:ss. The supported range is from '-838:59:59' to '838:59:59'")])]),t._v(" "),a("tr",[a("td",[t._v("YEAR")]),t._v(" "),a("td",[t._v("A year in four-digit format. Values allowed in four-digit format: 1901 to 2155, and 0000.\nMySQL 8.0 does not support year in two-digit format.")])])])]),t._v(" "),a("h2",[t._v("SQL Server Data Types")]),t._v(" "),a("h3",[t._v("String Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"30%"}},[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",[t._v("Max size")]),t._v(" "),a("th",[t._v("Storage")])]),t._v(" "),a("tr",[a("td",[t._v("char(n)")]),t._v(" "),a("td",[t._v("Fixed width character string")]),t._v(" "),a("td",[t._v("8,000 characters")]),t._v(" "),a("td",[t._v("Defined width")])]),t._v(" "),a("tr",[a("td",[t._v("varchar(n)")]),t._v(" "),a("td",[t._v("Variable width character string")]),t._v(" "),a("td",[t._v("8,000 characters")]),t._v(" "),a("td",[t._v("2 bytes + number of chars")])]),t._v(" "),a("tr",[a("td",[t._v("varchar(max)")]),t._v(" "),a("td",[t._v("Variable width character string")]),t._v(" "),a("td",[t._v("1,073,741,824 characters")]),t._v(" "),a("td",[t._v("2 bytes + number of chars")])]),t._v(" "),a("tr",[a("td",[t._v("text")]),t._v(" "),a("td",[t._v("Variable width character string")]),t._v(" "),a("td",[t._v("2GB of text data")]),t._v(" "),a("td",[t._v("4 bytes + number of chars")])]),t._v(" "),a("tr",[a("td",[t._v("nchar")]),t._v(" "),a("td",[t._v("Fixed width Unicode string")]),t._v(" "),a("td",[t._v("4,000 characters")]),t._v(" "),a("td",[t._v("Defined width x 2")])]),t._v(" "),a("tr",[a("td",[t._v("nvarchar")]),t._v(" "),a("td",[t._v("Variable width Unicode string")]),t._v(" "),a("td",[t._v("4,000 characters")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("nvarchar(max)")]),t._v(" "),a("td",[t._v("Variable width Unicode string")]),t._v(" "),a("td",[t._v("536,870,912 characters")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("ntext")]),t._v(" "),a("td",[t._v("Variable width Unicode string")]),t._v(" "),a("td",[t._v("2GB of text data")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("binary(n)")]),t._v(" "),a("td",[t._v("Fixed width binary string")]),t._v(" "),a("td",[t._v("8,000 bytes")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("varbinary")]),t._v(" "),a("td",[t._v("Variable width binary string")]),t._v(" "),a("td",[t._v("8,000 bytes")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("varbinary(max)")]),t._v(" "),a("td",[t._v("Variable width binary string")]),t._v(" "),a("td",[t._v("2GB")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("image")]),t._v(" "),a("td",[t._v("Variable width binary string")]),t._v(" "),a("td",[t._v("2GB")]),t._v(" "),a("td",[t._v(" ")])])])]),t._v(" "),a("h3",[t._v("Numeric Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"20%"}},[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",{staticStyle:{width:"10%"}},[t._v("Storage")])]),t._v(" "),a("tr",[a("td",[t._v("bit")]),t._v(" "),a("td",[t._v("Integer that can be 0, 1, or NULL")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("tinyint")]),t._v(" "),a("td",[t._v("Allows whole numbers from 0 to 255")]),t._v(" "),a("td",[t._v("1 byte")])]),t._v(" "),a("tr",[a("td",[t._v("smallint")]),t._v(" "),a("td",[t._v("Allows whole numbers between -32,768 and 32,767")]),t._v(" "),a("td",[t._v("2 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("int")]),t._v(" "),a("td",[t._v("Allows whole numbers between -2,147,483,648 and 2,147,483,647 ")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("bigint")]),t._v(" "),a("td",[t._v("Allows whole numbers between -9,223,372,036,854,775,808 and   9,223,372,036,854,775,807 ")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("decimal(p,s)")]),t._v(" "),a("td",[t._v("Fixed precision and scale numbers.\n      "),a("p",[t._v("Allows numbers from -10^38 +1 to 10^38 –1.")]),t._v(" "),a("p",[t._v("The p parameter indicates the maximum total number of digits that can  be stored (both to the left and to the right of the decimal point). p  must be a value from 1 to 38. Default is 18.")]),t._v(" "),a("p",[t._v("The s parameter indicates the maximum number of digits stored to the  right of the decimal point. s must be a value from 0 to p. Default value  is 0")])]),t._v(" "),a("td",[t._v("5-17 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("numeric(p,s)")]),t._v(" "),a("td",[t._v("Fixed precision and scale numbers.\n      "),a("p",[t._v("Allows numbers from -10^38 +1 to 10^38 –1.")]),t._v(" "),a("p",[t._v("The p parameter indicates the maximum total number of digits that can  be stored (both to the left and to the right of the decimal point). p  must be a value from 1 to 38. Default is 18.")]),t._v(" "),a("p",[t._v("The s parameter indicates the maximum number of digits stored to the  right of the decimal point. s must be a value from 0 to p. Default value  is 0")])]),t._v(" "),a("td",[t._v("5-17 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("smallmoney")]),t._v(" "),a("td",[t._v("Monetary data from -214,748.3648 to 214,748.3647 ")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("money")]),t._v(" "),a("td",[t._v("Monetary data from -922,337,203,685,477.5808 to   922,337,203,685,477.5807")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("float(n)")]),t._v(" "),a("td",[t._v("Floating precision number data from -1.79E + 308 to 1.79E + 308."),a("p",[t._v("The   n parameter indicates whether the field should hold 4 or 8 bytes.   float(24) holds a 4-byte field and float(53) holds an 8-byte field.   Default value of n is 53.")])]),t._v(" "),a("td",[t._v("4 or 8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("real")]),t._v(" "),a("td",[t._v("Floating precision number data from -3.40E + 38 to 3.40E + 38")]),t._v(" "),a("td",[t._v("4 bytes")])])])]),t._v(" "),a("h3",[t._v("Date and Time Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"20%"}},[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",{staticStyle:{width:"10%"}},[t._v("Storage")])]),t._v(" "),a("tr",[a("td",[t._v("datetime")]),t._v(" "),a("td",[t._v("From January 1, 1753 to December 31, 9999 with an accuracy of 3.33   milliseconds")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("datetime2")]),t._v(" "),a("td",[t._v("From January 1, 0001 to December 31, 9999 with an accuracy of 100   nanoseconds")]),t._v(" "),a("td",[t._v("6-8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("smalldatetime")]),t._v(" "),a("td",[t._v("From January 1, 1900 to June 6, 2079 with an accuracy of 1 minute")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("date")]),t._v(" "),a("td",[t._v("Store a date only. From January 1, 0001 to December 31, 9999")]),t._v(" "),a("td",[t._v("3 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("time")]),t._v(" "),a("td",[t._v("Store a time only to an accuracy of 100 nanoseconds")]),t._v(" "),a("td",[t._v("3-5 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("datetimeoffset")]),t._v(" "),a("td",[t._v("The same as datetime2 with the addition of a time zone offset")]),t._v(" "),a("td",[t._v("8-10 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("timestamp")]),t._v(" "),a("td",[t._v("Stores a unique number that gets updated every time a row gets created   or modified. The timestamp value is based upon an internal clock and does   not correspond to real time. Each table may have only one timestamp   variable")]),t._v(" "),a("td",[t._v(" ")])])])]),t._v(" "),a("h3",[t._v("Other Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"20%"}},[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")])]),t._v(" "),a("tr",[a("td",[t._v("sql_variant")]),t._v(" "),a("td",[t._v("Stores up to 8,000 bytes of data of various data types, except text,   ntext, and timestamp")])]),t._v(" "),a("tr",[a("td",[t._v("uniqueidentifier")]),t._v(" "),a("td",[t._v("Stores a globally unique identifier (GUID)")])]),t._v(" "),a("tr",[a("td",[t._v("xml")]),t._v(" "),a("td",[t._v("Stores XML formatted data. Maximum 2GB")])]),t._v(" "),a("tr",[a("td",[t._v("cursor")]),t._v(" "),a("td",[t._v("Stores a reference to a cursor used for database operations")])]),t._v(" "),a("tr",[a("td",[t._v("table")]),t._v(" "),a("td",[t._v("Stores a result-set for later processing")])])])]),t._v(" "),a("h2",[t._v("MS Access Data Types")]),t._v(" "),a("table",{staticClass:"patterns"},[a("tbody",[a("tr",[a("th",{staticStyle:{width:"20%"}},[t._v("Data type")]),t._v(" "),a("th",[t._v("Description")]),t._v(" "),a("th",{staticStyle:{width:"10%"}},[t._v("Storage")])]),t._v(" "),a("tr",[a("td",[t._v("Text")]),t._v(" "),a("td",[t._v("Use for text or combinations of text and numbers. 255 characters maximum")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("Memo")]),t._v(" "),a("td",[t._v("Memo is used for larger amounts of text. Stores up to 65,536 characters. "),a("b",[t._v("Note:")]),t._v(" You cannot sort a memo field. However, they are   searchable")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("Byte")]),t._v(" "),a("td",[t._v("Allows whole numbers from 0 to 255")]),t._v(" "),a("td",[t._v("1 byte")])]),t._v(" "),a("tr",[a("td",[t._v("Integer")]),t._v(" "),a("td",[t._v("Allows whole numbers between -32,768 and 32,767")]),t._v(" "),a("td",[t._v("2 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Long")]),t._v(" "),a("td",[t._v("Allows whole numbers between -2,147,483,648 and 2,147,483,647")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Single")]),t._v(" "),a("td",[t._v("Single precision floating-point. Will handle most decimals ")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Double")]),t._v(" "),a("td",[t._v("Double precision floating-point. Will handle most decimals")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Currency")]),t._v(" "),a("td",[t._v("Use for currency. Holds up to 15 digits of whole dollars, plus 4 decimal places. "),a("b",[t._v("Tip:")]),t._v(" You can choose which country's currency to use")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("AutoNumber")]),t._v(" "),a("td",[t._v("AutoNumber fields automatically give each record its own number, usually starting at 1")]),t._v(" "),a("td",[t._v("4 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Date/Time")]),t._v(" "),a("td",[t._v("Use for dates and times")]),t._v(" "),a("td",[t._v("8 bytes")])]),t._v(" "),a("tr",[a("td",[t._v("Yes/No")]),t._v(" "),a("td",[t._v("A logical field can be displayed as Yes/No, True/False, or On/Off. In code, use the constants True and False (equivalent to -1 and 0). "),a("b",[t._v("Note:")]),t._v("   Null values are not allowed in Yes/No fields")]),t._v(" "),a("td",[t._v("1 bit")])]),t._v(" "),a("tr",[a("td",[t._v("Ole Object")]),t._v(" "),a("td",[t._v("Can store pictures, audio, video, or other BLOBs (Binary Large OBjects)")]),t._v(" "),a("td",[t._v("up to 1GB")])]),t._v(" "),a("tr",[a("td",[t._v("Hyperlink")]),t._v(" "),a("td",[t._v("Contain links to other files, including web pages")]),t._v(" "),a("td",[t._v(" ")])]),t._v(" "),a("tr",[a("td",[t._v("Lookup Wizard")]),t._v(" "),a("td",[t._v("Let you type a list of options, which can then be chosen from a drop-down list")]),t._v(" "),a("td",[t._v("4 bytes")])])])]),t._v(" "),a("br"),a("br"),a("br")])}],!1,d,null,null).exports},2023:function(t,e,a){var i=a(7252);i.__esModule&&(i=i.default),"string"==typeof i&&(i=[[t.id,i,""]]),i.locals&&(t.exports=i.locals);(0,a(5346).Z)("413cc298",i,!0,{})}}]);