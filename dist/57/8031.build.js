(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[8031],{7648:function(t,e,a){(t.exports=a(9252)(!1)).push([t.id,".center-margin,.inner{margin-left:auto;margin-right:auto}.inner{max-width:600px}",""])},8031:function(t,e,a){"use strict";a.r(e),a.d(e,{default:function(){return r}});var n=a(2880),o=a(1772),i=a(845),l={components:{DropDownBox:n.Z,TryItNow:i.Z,ModalA:o.Z}};var s=function(t){a(8466)},r=(0,a(2236).Z)(l,(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("div",{staticClass:"inner"},[a("h1",[t._v("SQL NULL Values")]),t._v(" "),a("h2",[t._v("What is a NULL Value?")]),t._v(" "),a("p",[t._v("A field with a NULL value is a field with no value.")]),t._v(" "),a("p",[t._v("If a field in a table is optional, it is possible to insert a new record or update a record without adding a value to this field. Then, the field will be saved with a NULL value.")]),t._v(" "),a("h2",[t._v("How to Test for NULL Values?")]),t._v(" "),a("p",[t._v("It is not possible to test for NULL values with comparison operators, such as =, <, or <>.")]),t._v(" "),a("p",[t._v("We will have to use the IS NULL and IS NOT NULL operators instead.")]),t._v(" "),a("h3",[t._v("IS NULL Syntax")]),t._v(" "),a("try-it-now",{attrs:{code:"SELECT column_names\nFROM table_name\nWHERE column_name IS NULL;",tryNowButton:!1}}),t._v(" "),a("h3",[t._v("IS NOT NULL Syntax")]),t._v(" "),a("try-it-now",{attrs:{code:"SELECT column_names\nFROM table_name\nWHERE column_name IS NOT NULL;",tryNowButton:!1}}),t._v(" "),a("h2",[t._v("The IS NULL Operator")]),t._v(" "),a("p",[t._v("The IS NULL operator is used to test for empty values (NULL values).")]),t._v(" "),a("p",[t._v('The following SQL lists all patients with a NULL value in the "allergies" field:')]),t._v(" "),a("try-it-now",{attrs:{code:"SELECT *\nFROM patients\nWHERE allergies IS NULL;",tryNowButton:!0}}),t._v(" "),a("br"),a("br"),a("br")],1)}),[],!1,s,null,null).exports},8466:function(t,e,a){var n=a(7648);n.__esModule&&(n=n.default),"string"==typeof n&&(n=[[t.id,n,""]]),n.locals&&(t.exports=n.locals);(0,a(5346).Z)("1e748c16",n,!0,{})}}]);