(self.webpackChunksqlitelearn=self.webpackChunksqlitelearn||[]).push([[4797],{4797:function(e,t,n){"use strict";n.r(t);var i=n(9654);t.default={question:"Show unique first names from the patients table which only occurs once in the list.<br></br>For example, if two or more people are named 'John' in the first_name column then don't include their name in the output list. If only 1 person is named 'Leo' then include them in the output.",solution:"SELECT first_name\nFROM patients\nGROUP BY first_name\nHAVING COUNT(first_name) = 1",alternativeSolutions:["SELECT first_name\nFROM (\n    SELECT\n      first_name,\n      count(first_name) AS occurrencies\n    FROM patients\n    GROUP BY first_name\n  )\nWHERE occurrencies = 1"],expectedOutput:null,hints:{keywordsUsed:["SELECT","GROUP BY","HAVING","COUNT"],hintLines:[3],solutionPortion:"SELECT first_name FROM patients GROUP BY first_name HAVING"},expectedDBState:null,usedTables:["patients"],validator:function(e,t){return i.Z.hashColumns((null==t?void 0:t.values)||[],!1)==i.Z.hashColumns(this.expectedOutput[0].values,!1)},initalize:function(e){this.expectedOutput=e.exec(this.solution),this.expectedDBState=e}}}}]);